{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/guards/auth-interceptor.ts","./ClientApp/app/guards/auth.guard.ts","./ClientApp/app/home/home.component.ts","./ClientApp/app/home/home.component.html","./ClientApp/app/navbar/navbar.component.ts","./ClientApp/app/navbar/navbar.component.html","./ClientApp/app/registration/registration.component.ts","./ClientApp/app/registration/registration.component.html","./ClientApp/app/services/areas.service.ts","./ClientApp/app/services/cities.service.ts","./ClientApp/app/services/registration.service.ts","./ClientApp/app/services/user.service.ts","./ClientApp/app/user/login/login.component.ts","./ClientApp/app/user/login/login.component.html","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myapp';\n}\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n","import { CitiesService } from './services/cities.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AreasService } from './services/areas.service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { LoginComponent } from './user/login/login.component';\r\nimport { UserService } from './services/user.service';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AuthInterceptor } from './guards/auth-interceptor';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nconst router: Routes = [\r\n  { path: '', component: HomeComponent },\r\n    { path: 'Registration', component: RegistrationComponent },\r\n  {path:'Login',component:LoginComponent}\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    RegistrationComponent,\r\n    HomeComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatInputModule,\r\n    RouterModule.forRoot(router,{useHash:true}),\r\n    BrowserAnimationsModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    ToastrModule.forRoot()\r\n  ],\r\n    providers: [\r\n        [AreasService, CitiesService],\r\n        UserService,\r\n        AuthGuard,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AuthInterceptor,\r\n            multi: true\r\n        },\r\n       { provide: APP_BASE_HREF, useValue: '/' }\r\n    ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { UserService } from '../services/user.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators'\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router, private userService: UserService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        const userToken = this.userService.CurrentUserToken();\r\n        if (userToken != null) {\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    Authorization: \"Bearer \" + userToken\r\n                }\r\n            });\r\n\r\n            return next.handle(req).pipe(\r\n                tap(\r\n                    success => { },\r\n                    err => {\r\n                        if (err.status == 401) {\r\n                            localStorage.removeItem('token');\r\n                            this.router.navigateByUrl('/login');\r\n                        }\r\n                    }));\r\n        }\r\n\r\n        else {\r\n            return next.handle(req.clone());\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router, private userService: UserService) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (this.userService.IsLogin())\r\n          return true;\r\n      this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n      return false;\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header id=\"header\">\r\n  <div class=\"header_top\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-6\">\r\n          <div class=\"contactinfo\">\r\n            <ul class=\"nav nav-pills\">\r\n              <li><a href=\"#\"><i class=\"fa fa-phone\"></i> +2 95 01 88 821</a></li>\r\n              <li><a href=\"#\"><i class=\"fa fa-envelope\"></i> info@domain.com</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n          <div class=\"social-icons pull-right\">\r\n            <ul class=\"nav navbar-nav\">\r\n              <li><a href=\"#\"><i class=\"fa fa-facebook\"></i></a></li>\r\n              <li><a href=\"#\"><i class=\"fa fa-twitter\"></i></a></li>\r\n              <li><a href=\"#\"><i class=\"fa fa-linkedin\"></i></a></li>\r\n              <li><a href=\"#\"><i class=\"fa fa-dribbble\"></i></a></li>\r\n              <li><a href=\"#\"><i class=\"fa fa-google-plus\"></i></a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"header-middle\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4 clearfix\">\r\n          <div class=\"logo pull-left\">\r\n            <a href=\"index.html\"><img src=\"/img/microsoft.png\" width=\"100\" /></a>\r\n          </div>\r\n          <div class=\"btn-group pull-right clearfix\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"button\" class=\"btn btn-default dropdown-toggle usa\" data-toggle=\"dropdown\">\r\n                USA\r\n                <span class=\"caret\"></span>\r\n              </button>\r\n              <ul class=\"dropdown-menu\">\r\n                <li><a href=\"\">Canada</a></li>\r\n                <li><a href=\"\">UK</a></li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div class=\"btn-group\">\r\n              <button type=\"button\" class=\"btn btn-default dropdown-toggle usa\" data-toggle=\"dropdown\">\r\n                DOLLAR\r\n                <span class=\"caret\"></span>\r\n              </button>\r\n              <ul class=\"dropdown-menu\">\r\n                <li><a href=\"\">Canadian Dollar</a></li>\r\n                <li><a href=\"\">Pound</a></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-8 clearfix\">\r\n          <div class=\"shop-menu clearfix pull-right\">\r\n            <ul class=\"nav navbar-nav\">\r\n              <li><a href=\"\"><i class=\"fa fa-user\"></i> Account</a></li>\r\n              <li><a href=\"\"><i class=\"fa fa-star\"></i> Wishlist</a></li>\r\n              <li><a href=\"checkout.html\"><i class=\"fa fa-crosshairs\"></i> Checkout</a></li>\r\n              <li><a routerLink=\"/Registration\"><i class=\"fa fa-lock\"></i> Registration</a></li>\r\n              <li><a routerLink=\"/Login\"><i class=\"fa fa-lock\"></i> Login</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div><!--/header-middle-->\r\n</header>","import { Router } from '@angular/router';\n/** @format */\n\nimport { Registration } from \"./../model/registration\";\nimport { RegistrationService } from \"./../services/registration.service\";\nimport { City } from \"./../model/city\";\nimport { CitiesService } from \"./../services/cities.service\";\nimport { AreasService } from \"./../services/areas.service\";\nimport { Areas } from \"./../model/areas\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n\tselector: \"app-registration\",\n\ttemplateUrl: \"./registration.component.html\",\n\tstyleUrls: [\"./registration.component.css\"],\n})\nexport class RegistrationComponent implements OnInit {\n\tareas: Areas[];\n\tcities: City[];\n\tconstructor(\n\t\tprivate areaService: AreasService,\n\t\tprivate citiesServices: CitiesService,\n    private register: RegistrationService,\n\t\tprivate toastr: ToastrService,\n\tprivate router:Router\n\t) {}\n\tpasswordConfirmation: boolean = false;\n\tngOnInit(): void {\n\t\tthis.citiesServices.GetCities().subscribe((a) => {\n\t\t\tthis.cities = a;\n\t\t});\n\t}\n\tOnRegistration(data: NgForm) {\n\t\tif (data.valid) {\n\t\t\tconsole.log(data.value);\n\t\t\tthis.register.RegisterUser(data.value).subscribe((a) => {\n\t\t\t\tthis.toastr.success(\"The Registration has been success\");\n\t\t\t\tthis.router.navigate(['/Login']);\n\t\t\t    \n      }, (err: HttpErrorResponse) => {\n          console.log(err);\n          this.toastr.error(err.error);    \n      });\n\t\t}\n\t}\n\tOComparePasswords(password, confirmPassword) {\n\t\tconsole.log(confirmPassword.value);\n\t\tconsole.log(password.value);\n\t\tthis.passwordConfirmation = password.value != confirmPassword.value;\n\t\tconsole.log(this.passwordConfirmation);\n\t}\n\tOnCityChange(data) {\n\t\tif (data.value != 0) {\n\t\t\tthis.areaService.GetAreas(data.value).subscribe((a) => {\n\t\t\t\tthis.areas = a;\n\t\t\t\tconsole.log(a);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.areas = [];\n\t\t}\n\t}\n}\n","<!-- @format -->\n\n<div class=\"container mt-3\">\n\t<h2>Registration</h2>\n\n\t<form #form=\"ngForm\" (ngSubmit)=\"OnRegistration(form)\">\n\t\t<mat-form-field class=\"control-item-50\">\n\t\t\t<mat-label>FirstName</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\tngModel\n\t\t\t\t#firstName=\"ngModel\"\n\t\t\t\tname=\"firstName\"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t\trequired\n\t\t\t\tminlength=\"3\"\n\t\t\t\tmaxlength=\"10\"\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"firstName.invalid && firstName.touched\">\n\t\t\t\t<mat-error *ngIf=\"firstName.errors.required\">\n\t\t\t\t\tFirstName is Required\n\t\t\t\t</mat-error>\n\t\t\t\t<mat-error *ngIf=\"firstName.errors.minlength\">\n\t\t\t\t\tFirstName should be minimum 3 characters\n\t\t\t\t</mat-error>\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"control-item-50\">\n\t\t\t<mat-label>LastName</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\tngModel\n\t\t\t\tname=\"lastName\"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t\t#lastname=\"ngModel\"\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"lastname.invalid && lastname.touched\">\n\t\t\t\tThe LastName is Required\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-100\">\n\t\t\t<mat-label>Email</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\ttype=\"email\"\n\t\t\t\tngModel\n\t\t\t\tname=\"email\"\n\t\t\t\tclass=\"control-item-100\"\n\t\t\t\trequired\n\t\t\t\t#email=\"ngModel\"\n\t\t\t\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"email.touched && email.invalid\">\n\t\t\t\t<mat-error *ngIf=\"email.errors.required\">\n\t\t\t\t\tPlease Write your Email\n\t\t\t\t</mat-error>\n\t\t\t\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-100\">\n\t\t\t<mat-label>UserName</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\trequired\n\t\t\t\tngModel\n\t\t\t\tname=\"userName\"\n\t\t\t\tclass=\"control-item-100\"\n\t\t\t\t#userName=\"ngModel\"\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"userName.invalid && userName.touched\">\n\t\t\t\tThe UserName is Required\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"control-item-50\">\n\t\t\t<mat-label>Password</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\ttype=\"password\"\n\t\t\t\tngModel\n\t\t\t\t#password=\"ngModel\"\n\t\t\t\tname=\"password\"\n\t\t\t\t(change)=\"this.OComparePasswords(password, confirmpassword)\"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t\trequired\n\t\t\t/>\n\n\t\t\t<mat-error *ngIf=\"password.invalid && password.touched\">\n\t\t\t\tThe password is Required\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"control-item-50\">\n\t\t\t<mat-label>Password Confirm</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\ttype=\"password\"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t\tngModel\n\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t#confirmpassword=\"ngModel\"\n\t\t\t\trequired\n\t\t\t\t(change)=\"this.OComparePasswords(password, confirmpassword)\"\n\t\t\t/>\n\t\t</mat-form-field>\n\t\t<mat-error *ngIf=\"passwordConfirmation\">\n\t\t\tThe password doesn't much parent or Empty\n\t\t</mat-error>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-50\">\n\t\t\t<mat-label>Phone</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\ttype=\"text\"\n\t\t\t\tngModel\n\t\t\t\t#phone=\"ngModel\"\n\t\t\t\tname=\"phonenumber\"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t\trequired\n\t\t\t\tpattern=\"^[0-9]{9,15}$\"\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"phone.invalid\">\n\t\t\t\t<mat-error *ngIf=\"phone.errors.pattern\"> it's not phone </mat-error>\n\t\t\t\t<mat-error *ngIf=\"phone.errors.required\">\n\t\t\t\t\tthe phone is required\n\t\t\t\t</mat-error>\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-50\">\n\t\t\t<mat-label>Address</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\ttype=\"text\"\n\t\t\t\tngModel\n\t\t\t\t#address=\"ngModel\"\n\t\t\t\tname=\"address\"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t\trequired\n\t\t\t\tminlength=\"11\"\n\t\t\t\t\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"address.invalid\">\n\t\t\t\n\t\t\t\t<mat-error *ngIf=\"address.errors.required\">\n\t\t\t\t\tthe Address is required\n\t\t\t\t</mat-error>\n\t\t\t\t<mat-error *ngIf=\"address.errors.minlength\">\n\t\t\t\t\tThe Address should be more than 11 charachter\n\t\t\t\t</mat-error>\n\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-50\">\n\t\t\t<mat-label>City</mat-label>\n\t\t\t<select matNativeControl #city (change)=\"OnCityChange(city)\">\n\t\t\t\t<option value=\"0\">...</option>\n\t\t\t\t<option *ngFor=\"let item of cities\" [value]=\"item.id\">{{\n\t\t\t\t\titem.cityName\n\t\t\t\t}}</option>\n\t\t\t</select>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-50\">\n\t\t\t<mat-label>Area</mat-label>\n\t\t\t<select required matNativeControl ngModel name=\"areaID\" #areaID=\"ngModel\" >\n\t\t\t\t<option *ngFor=\"let item of areas\" [value]=\"item.id\">{{\n\t\t\t\t\titem.areaName\n\t\t\t\t}}</option>\n\t\t\t</select>\n\t\t</mat-form-field>\n\n\t\t<div class=\"form-group\">\n\t\t\t<button class=\"btn btn-success\" [disabled]=\"form.invalid\">Submit</button>\n\t\t</div>\n\t</form>\n</div>\n","import { Areas } from './../model/areas';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AreasService {\n\n  constructor(private http: HttpClient) {\n    \n  }\n  GetAreas(id:number) {\n    return this.http.get<Areas[]>(\"/api/Areas/?ID=\"+id);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { City } from '../model/city';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CitiesService {\n\n  constructor(private http:HttpClient) { \n\n  }\n  GetCities() {\n    return this.http.get<City[]>(\"/api/Cities\");\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Registration } from '../model/registration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n\n  constructor(private http: HttpClient) { \n    \n  }\n\n  RegisterUser(registerUser:Registration) {\n   return this.http.post<Registration>(\"/api/Account/Register\",registerUser);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n    constructor(private http: HttpClient, private router: Router) { }\r\n\r\n    //user Authentication(\r\n    userAuthentication(formData) {\r\n        return this.http.post('api/account/login', formData);\r\n    }\r\n\r\n    //check if the user login or not \r\n    IsLogin() {\r\n        let userToken = localStorage.getItem('token');\r\n        if (userToken != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    Logout() {\r\n        localStorage.removeItem('token');\r\n        this.router.navigate(['/']);\r\n    }\r\n\r\n    CurrentUserToken() {\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    CurrentUserName() {\r\n        let userToken = localStorage.getItem('token');\r\n        if (!userToken) return null;\r\n        let userName = localStorage.getItem('userName');\r\n        return userName;\r\n    }\r\n\r\n    CurrentUserId() {\r\n        let userToken = localStorage.getItem('token');\r\n        if (!userToken) return null;\r\n        let userId = localStorage.getItem('userId');\r\n        return userId;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    notLogin: boolean = false;\r\n    constructor(private userService: UserService, private router: Router,\r\n        private route: ActivatedRoute) { }\r\n\r\n    Save(formData) {\r\n        this.userService.userAuthentication(formData.value).subscribe((data: any) => {\r\n            console.log('Login Data ', data);\r\n            localStorage.setItem('token', data.token);\r\n            localStorage.setItem('userId', data.userId);\r\n            localStorage.setItem('userName', data.userName);\r\n            //localStorage.setItem('userRole', data.Role);\r\n\r\n            let returnUrl = this.route.snapshot.queryParamMap.get('returnUrl');\r\n            this.router.navigate([returnUrl || '/'])\r\n        },\r\n            (err: HttpErrorResponse) => {\r\n                this.notLogin = true;\r\n            });\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<section class=\"container\">\r\n    <!--<div class=\"col-lg-12 tm-section-header-container margin-bottom-30\">\r\n        <h2 class=\"tm-section-header gold-text tm-handwriting-font\">\r\n            <img src=\"img/logo.png\" alt=\"Logo\"\r\n                 class=\"tm-site-logo\"> Login\r\n        </h2>\r\n        <div class=\"tm-hr-container\">\r\n            <hr class=\"tm-hr\">\r\n        </div>\r\n    </div>-->\r\n    <form #f=\"ngForm\" (ngSubmit)=\"Save(f)\">\r\n        <div class=\"col-lg-7 col-md-7\">\r\n            <div class=\"form-group\">\r\n                <label for=\"userName\">UserName</label>\r\n                <input type=\"text\" id=\"userName\" ngModel name=\"userName\" class=\"form-control\"\r\n                       placeholder=\"Enter your User Name\" required #userName=\"ngModel\" />\r\n                <div class=\"alert alert-danger\" *ngIf=\"userName.touched && userName.invalid\">\r\n                    User Name is required\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" ngModel id=\"password\" name=\"password\" class=\"form-control\"\r\n                       placeholder=\"Enter your Password\" required #password=\"ngModel\" />\r\n                <div class=\"alert alert-danger\" *ngIf=\"password.touched && password.invalid\">\r\n                    Password is required\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <div *ngIf=\"notLogin\" class=\"alert alert-danger\">\r\n                <div>Incorrect username or password Try again</div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button class=\"btn btn-primary\" type=\"submit\" name=\"submit\">Login</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</section>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}