{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/home/home.component.ts","./ClientApp/app/home/home.component.html","./ClientApp/app/navbar/navbar.component.ts","./ClientApp/app/navbar/navbar.component.html","./ClientApp/app/registration/registration.component.ts","./ClientApp/app/registration/registration.component.html","./ClientApp/app/services/areas.service.ts","./ClientApp/app/services/cities.service.ts","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myapp';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","import { CitiesService } from './services/cities.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { HomeComponent } from './home/home.component';\nimport { AreasService } from './services/areas.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n\n\n\n\nconst router: Routes = [\n  { path: '', component: HomeComponent },\n  {path:'Registration',component:RegistrationComponent}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegistrationComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MatInputModule,\n    RouterModule.forRoot(router,{useHash:true}),\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ],\n  providers: [AreasService,CitiesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n      <a class=\"navbar-brand\" href=\"#\">Karen Tech </a>\n      <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n          <li class=\"nav-item active\">\n              <a class=\"nav-link\" href=\"#\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n              <span class=\"badge badge-pill badge-primary\" style=\"float:right;margin-bottom:-10px;\">1</span> \n              <a class=\"nav-link\" routerLink=\"/chat\" >Messages <span class=\"sr-only\">(current)</span></a>\n          </li>\n      </ul>\n      <div class=\"form-inline my-2 my-lg-0\">\n          \n        <!-- <div *ngIf=\"this.auth.CheckLoginOrNot() then IsNotLogin else IsLogin  \">\n\n        </div> -->\n        <div>\n            <a class=\"btn btn-success\" routerLink=\"/Registration\">Registration</a>\n            <a class=\"btn btn-success ml-2\">Login</a>\n            <!-- <a routerLink=\"/registration\" class=\"btn btn-success\">Registration</a> -->\n            <!-- <a routerLink=\"/login\" class=\"btn btn-primary ml-2\">Login</a> -->\n          </div>\n\n      </div>\n    </div>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  OnRegistration(data:NgForm) {\n    console.log(data);\n  }\n\n\n}\n","<!-- @format -->\n\n<div class=\"container mt-3\">\n\t<h2>Registration</h2>\n\n\t<form #form=\"ngForm\" (ngSubmit)=\"OnRegistration(form)\">\n\t\t<mat-form-field  class=\"control-item-50\">\n\t\t\t<mat-label>FirstName</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\tplaceholder=\"FirstName\"\n                ngModel\n                #firstName=\"ngModel\"\n\t\t\t\tname=\"firstName\"\n                class=\"control-item-50\"\n                required\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"firstName.invalid && firstName.touched\"> \n                The FirstName is Required\n                 </mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field  class=\"control-item-50\">\n\t\t\t<mat-label>LastName</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\tplaceholder=\"LastName\"\n\t\t\t\tngModel\n\t\t\t\tname=\"lastName\"\n                class=\"control-item-50\"\n                #lastname=\"ngModel\"\n                required\n            />\n            <mat-error *ngIf=\"lastname.invalid && lastname.touched\">\n                The LastName is Required\n            </mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-100\">\n\t\t\t<mat-label>Email</mat-label>\n\t\t\t<input\n                matInput\n                type=\"email\"\n\t\t\t\tplaceholder=\"Email\"\n\t\t\t\tngModel\n\t\t\t\tname=\"email\"\n                class=\"control-item-100\"\n                required \n                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            />\n            <mat-error>\n\n            </mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-100\">\n\t\t\t<mat-label>UserName</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\tplaceholder=\"UserName\"\n\t\t\t\tngModel\n\t\t\t\tname=\"userName\"\n\t\t\t\tclass=\"control-item-100\"\n\t\t\t/>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field  class=\"control-item-50\">\n\t\t\t<mat-label>Password</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"Password\"\n\t\t\t\tngModel\n\t\t\t\tname=\"password\"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t/>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field  class=\"control-item-50\">\n\t\t\t<mat-label>Password Confirm</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\ttype=\"password\"\n\t\t\t\tplaceholder=\"Password \"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t/>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"control-item-50\">\n\t\t\t<mat-label>Date of Birth</mat-label>\n\t\t\t<input matInput [matDatepicker]=\"picker\" class=\"control-item-50\" />\n\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n\t\t\t<mat-datepicker #picker></mat-datepicker>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-50\">\n\t\t\t<mat-label>Phone</mat-label>\n\t\t\t<input matInput placeholder=\"Phone\" class=\"control-item-50\" />\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-50\">\n\t\t\t<mat-label>City</mat-label>\n\t\t\t<select matNativeControl>\n\t\t\t\t<option value=\"\" selected></option>\n\t\t\t\t<option value=\"volvo\">Volvo</option>\n\t\t\t\t<option value=\"saab\" disabled>Saab</option>\n\t\t\t\t<option value=\"mercedes\">Mercedes</option>\n\t\t\t\t<option value=\"audi\">Audi</option>\n\t\t\t</select>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-50\">\n\t\t\t<mat-label>Area</mat-label>\n\t\t\t<select matNativeControl>\n\t\t\t\t<!-- <option value=\"\" selected></option>\n\t\t\t\t<option value=\"volvo\">Volvo</option>\n\t\t\t\t<option value=\"saab\" disabled>Saab</option>\n\t\t\t\t<option value=\"mercedes\">Mercedes</option>\n\t\t\t\t<option value=\"audi\">Audi</option> -->\n\t\t\t</select>\n\t\t</mat-form-field>\n\n\t\t<div class=\"form-group\">\n\t\t\t<button class=\"btn btn-success\">Submit</button>\n\t\t</div>\n\t</form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AreasService {\n\n  constructor(private http: HttpClient) {\n    \n   }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CitiesService {\n\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}