{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/home/home.component.ts","./ClientApp/app/home/home.component.html","./ClientApp/app/navbar/navbar.component.ts","./ClientApp/app/navbar/navbar.component.html","./ClientApp/app/registration/registration.component.ts","./ClientApp/app/registration/registration.component.html","./ClientApp/app/services/areas.service.ts","./ClientApp/app/services/cities.service.ts","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myapp';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","import { CitiesService } from './services/cities.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { HomeComponent } from './home/home.component';\nimport { AreasService } from './services/areas.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n\n\n\n\nconst router: Routes = [\n  { path: '', component: HomeComponent },\n  {path:'Registration',component:RegistrationComponent}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegistrationComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MatInputModule,\n    RouterModule.forRoot(router,{useHash:true}),\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ],\n  providers: [AreasService,CitiesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header id=\"header\">\n  <div class=\"header_top\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm-6\">\n          <div class=\"contactinfo\">\n            <ul class=\"nav nav-pills\">\n              <li><a href=\"#\"><i class=\"fa fa-phone\"></i> +2 95 01 88 821</a></li>\n              <li><a href=\"#\"><i class=\"fa fa-envelope\"></i> info@domain.com</a></li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"col-sm-6\">\n          <div class=\"social-icons pull-right\">\n            <ul class=\"nav navbar-nav\">\n              <li><a href=\"#\"><i class=\"fa fa-facebook\"></i></a></li>\n              <li><a href=\"#\"><i class=\"fa fa-twitter\"></i></a></li>\n              <li><a href=\"#\"><i class=\"fa fa-linkedin\"></i></a></li>\n              <li><a href=\"#\"><i class=\"fa fa-dribbble\"></i></a></li>\n              <li><a href=\"#\"><i class=\"fa fa-google-plus\"></i></a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"header-middle\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-4 clearfix\">\n          <div class=\"logo pull-left\">\n            <a href=\"index.html\"><img src=\"/img/microsoft.png\" width=\"100\" /></a>\n          </div>\n          <div class=\"btn-group pull-right clearfix\">\n            <div class=\"btn-group\">\n              <button type=\"button\" class=\"btn btn-default dropdown-toggle usa\" data-toggle=\"dropdown\">\n                USA\n                <span class=\"caret\"></span>\n              </button>\n              <ul class=\"dropdown-menu\">\n                <li><a href=\"\">Canada</a></li>\n                <li><a href=\"\">UK</a></li>\n              </ul>\n            </div>\n            \n            <div class=\"btn-group\">\n              <button type=\"button\" class=\"btn btn-default dropdown-toggle usa\" data-toggle=\"dropdown\">\n                DOLLAR\n                <span class=\"caret\"></span>\n              </button>\n              <ul class=\"dropdown-menu\">\n                <li><a href=\"\">Canadian Dollar</a></li>\n                <li><a href=\"\">Pound</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-8 clearfix\">\n          <div class=\"shop-menu clearfix pull-right\">\n            <ul class=\"nav navbar-nav\">\n              <li><a href=\"\"><i class=\"fa fa-user\"></i> Account</a></li>\n              <li><a href=\"\"><i class=\"fa fa-star\"></i> Wishlist</a></li>\n              <li><a href=\"checkout.html\"><i class=\"fa fa-crosshairs\"></i> Checkout</a></li>\n              <li><a routerLink=\"/Registration\"><i class=\"fa fa-lock\"></i> Registration</a></li>\n              <li><a href=\"login.html\"><i class=\"fa fa-lock\"></i> Login</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div><!--/header-middle-->\n</header>","import { City } from './../model/city';\nimport { CitiesService } from './../services/cities.service';\nimport { AreasService } from './../services/areas.service';\nimport { Areas } from './../model/areas';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  areas: Areas[];\n  cities: City[];\n  constructor(private areaService:AreasService, private citiesServices:CitiesService) { \n\n  }\n  passwordConfirmation: boolean=false;\n  ngOnInit(): void {\n    this.citiesServices.GetCities().subscribe(a => {\n      this.cities = a;\n    });\n  }\n  OnRegistration(data:NgForm) {\n    console.log(data);\n  }\n  OComparePasswords(password, confirmPassword) {\n    console.log(confirmPassword.value);\n    console.log(password.value);\n    this.passwordConfirmation = password.value != confirmPassword.value;\n    console.log(this.passwordConfirmation);\n  }\n  OnCityChange(data) {\n    if (data.value != 0) {\n      this.areaService.GetAreas(data.value).subscribe(a => {\n        this.areas = a;\n        console.log(a);\n      });\n\n    } else\n    {\n      this.areas = [];  \n    }\n  }\n\n\n}\n","<!-- @format -->\n\n<div class=\"container mt-3\">\n\t<h2>Registration</h2>\n\n\t<form #form=\"ngForm\" (ngSubmit)=\"OnRegistration(form)\">\n\t\t<mat-form-field class=\"control-item-50\">\n\t\t\t<mat-label>FirstName</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\tngModel\n\t\t\t\t#firstName=\"ngModel\"\n\t\t\t\tname=\"firstName\"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t\trequired\n\t\t\t\tminlength=\"3\"\n\t\t\t\tmaxlength=\"10\"\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"firstName.invalid && firstName.touched\">\n\t\t\t\t<mat-error *ngIf=\"firstName.errors.required\">\n\t\t\t\t\tFirstName is Required\n\t\t\t\t</mat-error>\n\t\t\t\t<mat-error *ngIf=\"firstName.errors.minlength\">\n\t\t\t\t\tFirstName should be minimum 3 characters\n\t\t\t\t</mat-error>\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"control-item-50\">\n\t\t\t<mat-label>LastName</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\tngModel\n\t\t\t\tname=\"lastName\"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t\t#lastname=\"ngModel\"\n\t\t\t\trequired\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"lastname.invalid && lastname.touched\">\n\t\t\t\tThe LastName is Required\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-100\">\n\t\t\t<mat-label>Email</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\ttype=\"email\"\n\t\t\t\tngModel\n\t\t\t\tname=\"email\"\n\t\t\t\tclass=\"control-item-100\"\n\t\t\t\trequired\n\t\t\t\t#email=\"ngModel\"\n\t\t\t\tpattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"email.touched && email.invalid\">\n\t\t\t\t<mat-error *ngIf=\"email.errors.required\">\n\t\t\t\t\tPlease Write your Email\n\t\t\t\t</mat-error>\n\t\t\t\t<mat-error *ngIf=\"email.errors.pattern\">\n\t\t\t\t\tinvalid Email\n\t\t\t\t</mat-error>\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-100\">\n\t\t\t<mat-label>UserName</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\trequired\n\t\t\t\tngModel\n\t\t\t\tname=\"userName\"\n\t\t\t\tclass=\"control-item-100\"\n\t\t\t\t#userName=\"ngModel\"\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"userName.invalid && userName.touched\">\n\t\t\t\tThe UserName is Required\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"control-item-50\">\n\t\t\t<mat-label>Password</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\ttype=\"password\"\n\t\t\t\tngModel\n\t\t\t\t#password=\"ngModel\"\n\t\t\t\tname=\"password\"\n\t\t\t\t(change)=\"this.OComparePasswords(password, confirmpassword)\"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t\trequired\n\t\t\t/>\n\n\t\t\t<mat-error *ngIf=\"password.invalid && password.touched\">\n\t\t\t\tThe password is Required\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"control-item-50\">\n\t\t\t<mat-label>Password Confirm</mat-label>\n\t\t\t<input\n\t\t\t\tmatInput\n\t\t\t\ttype=\"password\"\n\t\t\t\tclass=\"control-item-50\"\n\t\t\t\tngModel\n\t\t\t\tname=\"confirmpassword\"\n\t\t\t\t#confirmpassword=\"ngModel\"\n\t\t\t\trequired\n\t\t\t\t(change)=\"this.OComparePasswords(password, confirmpassword)\"\n\t\t\t/>\n\t\t</mat-form-field>\n\t\t<mat-error *ngIf=\"passwordConfirmation\">\n\t\t\tThe password doesn't much parent or Empty\n\t\t</mat-error>\n\n\t\t<mat-form-field class=\"control-item-50\">\n\t\t\t<mat-label>Date of Birth</mat-label>\n\t\t\t<input matInput #dateOfBirth=\"ngModel\" ngModel   name=\"dateOfBirth\" [matDatepicker]=\"picker\" required  class=\"control-item-50\" />\n\t\t\t<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n\t\t\t<mat-datepicker #picker></mat-datepicker>\n\t\t\t<mat-error *ngIf=\"dateOfBirth.invalid && dateOfBirth.touched\">\n\t\t\t\t<mat-error *ngIf=\"dateOfBirth.errors.required\"> The Date Is Required</mat-error>\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-50\">\n\t\t\t<mat-label>Phone</mat-label>\n\t\t\t<input matInput type=\"text\" ngModel #phone=\"ngModel\" name=\"phone\" class=\"control-item-50\" required pattern=\"^[0-9]{9,15}$\" />\n\t\t\t<mat-error *ngIf=\"phone.invalid\">\n\t\t\t\t<mat-error *ngIf=\"phone.errors.pattern\"> it's not phone </mat-error>\n\t\t\t\t<mat-error *ngIf=\"phone.errors.required\"> the phone is required </mat-error>\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-50\">\n\t\t\t<mat-label>City</mat-label>\n\t\t\t<select matNativeControl #city (change)=\"OnCityChange(city)\">\n\t\t\t\t<option value=\"0\">...</option>\n\t\t\t\t<option *ngFor=\"let item of cities\" [value]=\"item.id\">{{\n\t\t\t\t\titem.cityName\n\t\t\t\t}}</option>\n\t\t\t</select>\n\t\t</mat-form-field>\n\n\t\t<mat-form-field class=\"example-full-width\" class=\"control-item-50\">\n\t\t\t<mat-label>Area</mat-label>\n\t\t\t<select required matNativeControl>\n\t\t\t\t<option *ngFor=\"let item of areas\" [value]=\"item.id\">{{\n\t\t\t\t\titem.areaName\n\t\t\t\t}}</option>\n\t\t\t</select>\n\t\t</mat-form-field>\n\n\t\t<div class=\"form-group\">\n\t\t\t<button class=\"btn btn-success\" [disabled]=\"form.invalid\">Submit</button>\n\t\t</div>\n\t</form>\n</div>\n","import { Areas } from './../model/areas';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AreasService {\n\n  constructor(private http: HttpClient) {\n    \n  }\n  GetAreas(id:number) {\n    return this.http.get<Areas[]>(\"/api/Areas/?ID=\"+id);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { City } from '../model/city';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CitiesService {\n\n  constructor(private http:HttpClient) { \n\n  }\n  GetCities() {\n    return this.http.get<City[]>(\"/api/Cities\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}